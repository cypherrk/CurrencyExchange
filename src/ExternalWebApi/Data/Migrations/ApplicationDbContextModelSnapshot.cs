// <auto-generated />
using ExternalWebApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ExternalWebApi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ExternalWebApi.Domain.Entities.Currency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CurrencyCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Currencies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CurrencyCode = "AUD"
                        },
                        new
                        {
                            Id = 2,
                            CurrencyCode = "USD"
                        },
                        new
                        {
                            Id = 3,
                            CurrencyCode = "NZD"
                        },
                        new
                        {
                            Id = 4,
                            CurrencyCode = "JPY"
                        },
                        new
                        {
                            Id = 5,
                            CurrencyCode = "CNY"
                        });
                });

            modelBuilder.Entity("ExternalWebApi.Domain.Entities.CurrencyExchange", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("BaseRate")
                        .HasColumnType("real");

                    b.Property<int>("FromCurrencyId")
                        .HasColumnType("int");

                    b.Property<int>("ToCurrencyId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FromCurrencyId");

                    b.HasIndex("ToCurrencyId");

                    b.ToTable("CurrencyExchanges");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BaseRate = 0.7727f,
                            FromCurrencyId = 1,
                            ToCurrencyId = 2
                        },
                        new
                        {
                            Id = 2,
                            BaseRate = 1.0749f,
                            FromCurrencyId = 1,
                            ToCurrencyId = 3
                        },
                        new
                        {
                            Id = 3,
                            BaseRate = 83.5389f,
                            FromCurrencyId = 1,
                            ToCurrencyId = 4
                        },
                        new
                        {
                            Id = 4,
                            BaseRate = 5.0197f,
                            FromCurrencyId = 1,
                            ToCurrencyId = 5
                        });
                });

            modelBuilder.Entity("ExternalWebApi.Domain.Entities.CurrencyExchangeRate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CurrencyExchangeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsLatest")
                        .HasColumnType("bit");

                    b.Property<float>("Rate")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyExchangeId");

                    b.ToTable("CurrencyExchangeRates");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CurrencyExchangeId = 1,
                            IsLatest = true,
                            Rate = 0.7727f
                        },
                        new
                        {
                            Id = 2,
                            CurrencyExchangeId = 2,
                            IsLatest = true,
                            Rate = 1.0749f
                        },
                        new
                        {
                            Id = 3,
                            CurrencyExchangeId = 3,
                            IsLatest = true,
                            Rate = 83.5389f
                        },
                        new
                        {
                            Id = 4,
                            CurrencyExchangeId = 4,
                            IsLatest = true,
                            Rate = 5.0197f
                        });
                });

            modelBuilder.Entity("ExternalWebApi.Domain.Entities.CurrencyExchange", b =>
                {
                    b.HasOne("ExternalWebApi.Domain.Entities.Currency", "FromCurrency")
                        .WithMany()
                        .HasForeignKey("FromCurrencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ExternalWebApi.Domain.Entities.Currency", "ToCurrency")
                        .WithMany()
                        .HasForeignKey("ToCurrencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FromCurrency");

                    b.Navigation("ToCurrency");
                });

            modelBuilder.Entity("ExternalWebApi.Domain.Entities.CurrencyExchangeRate", b =>
                {
                    b.HasOne("ExternalWebApi.Domain.Entities.CurrencyExchange", "CurrencyExchange")
                        .WithMany()
                        .HasForeignKey("CurrencyExchangeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CurrencyExchange");
                });
#pragma warning restore 612, 618
        }
    }
}
